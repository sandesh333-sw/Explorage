name: Explorage CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: explorage-cluster
  GKE_ZONE: us-central1-a
  NAMESPACE: explorage
  DEPLOYMENT_NAME: explorage-backend

jobs:
  # First job: Test the code
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test --if-present
        env:
          CI: true

  # Second job: Build and push Docker image
  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    # Only run on push to main, not on PRs
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Option 1: Use Docker Hub (like your previous workflow)
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push to Docker Hub
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: pulami/explorage:latest,pulami/explorage:${{ github.sha }}

  # Third job: Deploy to GKE
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Fix: Updated version and explicitly using credentials_json
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GKE_SA_KEY }}'
          
      # Fix: Updated version for setup-gcloud  
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Set up GKE credentials
        run: |
          gcloud container clusters get-credentials ${{ env.GKE_CLUSTER }} --zone ${{ env.GKE_ZONE }} --project ${{ env.PROJECT_ID }}

      - name: Create namespace if needed
        run: |
          kubectl create namespace ${{ env.NAMESPACE }} --dry-run=client -o yaml | kubectl apply -f -
      
      - name: Create Kubernetes secrets
        run: |
          kubectl create secret generic explorage-secrets \
            --namespace=${{ env.NAMESPACE }} \
            --from-literal=CLOUD_NAME=${{ secrets.CLOUD_NAME }} \
            --from-literal=CLOUD_API_KEY=${{ secrets.CLOUD_API_KEY }} \
            --from-literal=CLOUD_API_SECRET=${{ secrets.CLOUD_API_SECRET }} \
            --from-literal=MAP_TOKEN=${{ secrets.MAP_TOKEN }} \
            --from-literal=ATLASDB_URL=${{ secrets.ATLASDB_URL }} \
            --from-literal=SECRET=${{ secrets.APP_SECRET }} \
            --dry-run=client -o yaml | kubectl apply -f -

      # Using the direct kubectl set image approach that worked in your previous workflow
      - name: Deploy to GKE
        run: |
          # Option 1: If using Docker Hub
          kubectl set image deployment/${{ env.DEPLOYMENT_NAME }} backend=pulami/explorage:${{ github.sha }} -n ${{ env.NAMESPACE }}
      
      - name: Verify deployment
        run: |
          kubectl rollout status deployment/${{ env.DEPLOYMENT_NAME }} -n ${{ env.NAMESPACE }}
          echo "âœ… Deployment successful! Your app is live."